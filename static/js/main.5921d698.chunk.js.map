{"version":3,"sources":["assets/images/acm-light.png","components/OrangeButton/OrangeButton.tsx","views/Message/GenericMessage.tsx","views/Message/Message404.tsx","components/Typeform/typeform.tsx","views/Message/Loading.tsx","api/actions/initialize.ts","api/actions/initialize_gsuite.ts","api/actions/profile.ts","api/actions/application.ts","api/state.ts","views/Message/Unauthorized.tsx","views/Form.tsx","components/Navbar/DarkNavbar.tsx","views/Applications/Applications.tsx","views/Profile/Discord.tsx","views/Profile/Profile.tsx","views/Message/Welcome.tsx","views/Message/GsuiteLanding.tsx","config/typeform_config.ts","views/Calendar/Calendar.tsx","views/Message/Event.tsx","components/Actions/GsuiteRoute.tsx","views/Message/CustomForm.tsx","acmApi/cookieManager.ts","components/Actions/GsuiteAuthorize.tsx","views/ProfileInjectedTypeform.tsx","components/Actions/Auth0Route.tsx","components/Actions/Auth0Authorize.tsx","App.tsx","config/auth0_config.ts","views/Message/Error.tsx","index.tsx"],"names":["module","exports","Button","props","history","useHistory","className","onClick","redirectURL","push","text","MessageComponent","styled","div","GenericMessage","src","alt","title","loading","type","color","height","width","desc","buttonText","buttonAction","buttonURL","Error","Typeform","typeformRef","useRef","useEffect","typeformEmbed","current","tfLink","options","ref","style","Loading","verify","authToken","a","undefined","jwt","is_verified","decodedToken","complete","payload","user_email","Sentry","id","sub","email","config","headers","Authorization","axios","get","process","then","res","decoded_jwt","idp","data","catch","err","auth","verify_gsuite","get_profile","exists","isLoading","profile","result","get_applications","atom","key","default","token","isSet","selector","application","jwt_gsuite","auth_gsuite","Unauthorized","Form","typeform_id","endpoint","useState","setLoading","isAuth","setIsAuth","signInAttempt","setSignInAttempt","url","setUrl","useAuth0","getAccessTokenSilently","isAuthenticated","user_profile","useRecoilValue","URLSearchParams","toString","load_data","Header","Layout","LogoComponent","DarkNavbar","selectedPage","logout","ACMLogo","window","location","href","theme","mode","defaultSelectedKeys","onSelect","MenuParams","Item","float","Content","Applications","open_applications","linkRedirect","link","includes","CircularProgress","Grid","container","alignItems","spacing","applications","map","app","active","item","xs","md","lg","Card","CardHeader","typeform_name","CardContent","description","CardActions","justifyContent","paddingBottom","path_name","external_link","cardApps","Step","Steps","DiscordPane","setCurrent","stepComplete","setStepComplete","step2Complete","setStep2Complete","access_token","setAccessToken","successVerification","setSuccessVerification","discordProfile","setDiscordProfile","loginWithRedirect","signin","console","log","discord_authentication","snowflake","username","discriminator","appState","targetUrl","connection","post","is_present","steps","content","message","showIcon","closable","length","disabled","success","TabPane","Tabs","Profile","discPane","discord_verified","marginBottom","defaultActiveKey","tabPosition","tab","past_events","event","index","name","Date","submitted_at","toDateString","reverse","past_applications","fontSize","rel","target","first_name","last_name","net_id","major","university","classification","Welcome","user","useRecoilState","setToken","fn","GsuiteLanding","auth_status","pro","REACT_APP_PROFILE_TYPEFORM","REACT_APP_PARTICIPATION_TYPEFORM","REACT_APP_EVENT_TYPEFORM","REACT_APP_SENDGRID_TYPEFORM","form","REACT_APP_FORM_ADDER_TYPEFORM","unauthorized_form","REACT_APP_UNAUTHORIZED_TYPEFORM","mentor","REACT_APP_MENTOR_TYPEFORM","mentee","REACT_APP_MENTEE_TYPEFORM","CalendarPage","paddingLeft","paddingRight","dateCellRender","value","listData","year","month","date","getListData","Fragment","monthCellRender","num","getMonthData","EventPage","apiComplete","setApiComplete","setEvent","pathname","event_name","GsuiteProtectedRoute","Component","path","rest","sessionStorage","setItem","render","exact","to","CustomForm","typeformID","setTypeformID","apps","total","filter","forEach","getCookie","parts","document","cookie","split","pop","shift","AuthorizeComponent","GsuiteAuthorize","Jwt","setJwt","reload","userPath","getItem","CapitalizeWord","word","charAt","toUpperCase","slice","ProfileInjectedTypeform","firstName","lastName","Auth0ProtectedRoute","Auth0Authorize","redirectUri","origin","App","component","Event","Message404","auth0_config","domain","clientId","audience","dsn","autoSessionTracking","integrations","Integrations","BrowserTracing","tracesSampleRate","environment","release","npm_package_version","ReactDOM","scope","useRefreshTokens","fallback","getElementById"],"mappings":"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","file":"static/js/main.5921d698.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/acm-light.42818f84.png\";","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./OrangeButton.css\";\n\ninterface ButtonProps {\n  text: string;\n  onClick?: () => void;\n  redirectURL?: string;\n}\n\nconst Button = (props: ButtonProps) => {\n  const history = useHistory();\n\n  const buttonClick = () => {\n    if (props.onClick) props.onClick();\n    if (props.redirectURL) history.push(props.redirectURL);\n  };\n\n  return (\n    <button className=\"orange-button\" onClick={buttonClick}>\n      {props.text}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport ReactLoading from \"react-loading\";\nimport Button from \"../../components/OrangeButton/OrangeButton\";\nimport styled from \"styled-components\";\n\ninterface message {\n  title: string;\n  desc?: string;\n  buttonText?: string; // if not defined, don't show button\n  buttonAction?: () => void;\n  buttonURL?: string;\n  loading?: boolean;\n}\n\nconst GenericMessage = (props: message) => {\n  return (\n    <MessageComponent>\n      <div className=\"container\">\n        <img\n          className=\"acm-logo\"\n          src=\"https://www.acmutd.co/brand/General/Assets/Logos/favicon.png\"\n          alt=\"ACM Logo\"\n        />\n        <h1 className=\"text\">{props.title}</h1>\n        {props.loading ? (\n          <ReactLoading\n            type={\"spinningBubbles\"}\n            color={\"white\"}\n            height={\"10%\"}\n            width={\"10%\"}\n          />\n        ) : (\n          <div className=\"column\">\n            <h4 className=\"text\">{props.desc}</h4>\n            {props.buttonText && (\n              <Button\n                text={props.buttonText}\n                onClick={props.buttonAction}\n                redirectURL={props.buttonURL}\n              />\n            )}\n          </div>\n        )}\n      </div>\n    </MessageComponent>\n  );\n};\n\nconst MessageComponent = styled.div`\n  .container {\n    display: flex;\n    background-color: black;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    height: 100vh;\n  }\n  .acm-logo {\n    width: 20%;\n  }\n  .text {\n    color: white;\n    margin: 30px;\n    font-family: ;\n  }\n  .column {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nexport default GenericMessage;\n","import React from \"react\";\nimport Message from \"./GenericMessage\";\n\nconst Error = () => {\n  return (\n    <Message\n      title=\"Oopsies\"\n      desc=\"Hello! You seem to have lost your way, let's get you back to safety.\"\n      buttonText=\"Take Me Home\"\n      buttonURL=\"/\"\n    />\n  );\n};\n\nexport default Error;\n","import React, { CSSProperties, useRef, useEffect } from \"react\";\nimport * as typeformEmbed from \"@typeform/embed\";\nimport { WidgetOptions } from \"typeform__embed\";\n\ninterface TypeformProps {\n\t/**\n\t * Link to Typeform form.\n\t * @example 'https://form.typeform.com/to/{id}'\n\t */\n\ttfLink: string;\n\t/**\n\t * Class names to assign to the generated <div>.\n\t */\n\tclassName?: string;\n\t/**\n\t * Custom styles to assign to the generated <div>.\n\t */\n\tstyle?: CSSProperties;\n\t/**\n\t * Typeform widget options, as defined by the Typeform library\n\t * @see https://github.com/Typeform/embed#widget\n\t */\n\toptions?: WidgetOptions;\n}\n\nconst Typeform = (props: TypeformProps): JSX.Element => {\n\tconst typeformRef = useRef(null);\n\tuseEffect(() => {\n\t\ttypeformEmbed.makeWidget(typeformRef.current as unknown as HTMLElement, props.tfLink, props.options);\n\t}, [props.tfLink, props.options, typeformRef]);\n\treturn (\n\t\t<div ref={typeformRef} className={props.className} style={props.style} />\n\t);\n};\n\nexport default Typeform;\n","import React from \"react\";\nimport Message from \"./GenericMessage\";\n\nconst Loading = () => {\n  return <Message title=\"Give us a moment...\" loading={true} />;\n};\n\nexport default Loading;\n","import * as jwt from \"jsonwebtoken\";\nimport axios from \"axios\";\nimport * as Sentry from \"@sentry/react\";\nimport { decoded_jwt, auth_status } from \"../../config/interface\";\n\nconst verify = async (authToken: string): Promise<auth_status> => {\n\n  if (authToken === undefined || authToken === \"\") {\n    return {\n      jwt: authToken,\n      is_verified: false,\n    };\n  }\n\n  // await new Promise(resolve => setTimeout(resolve, 5000));\n  const decodedToken: decoded_jwt = (jwt.decode(authToken, {\n    complete: true,\n  }) as any).payload;\n  const user_email = decodedToken[\"https://acmutd.co/email\"];\n  Sentry.setUser({\n    id: decodedToken.sub,\n    email: user_email,\n  });\n\n  const decoded_idp = \"auth0\";\n\n  const config = {\n    headers: {\n      Authorization: `Bearer ${authToken}`,\n    },\n  };\n  const auth: auth_status = await axios\n    .get(\n      (process.env.REACT_APP_CLOUD_FUNCTION_URL as string) +\n        \"/\" +\n        decoded_idp +\n        \"/verify-jwt\",\n      config\n    )\n    .then((res) => {\n      return {\n        jwt: authToken,\n        decoded_jwt: decodedToken,\n        idp: res.data.idp,\n        is_verified: true,\n      };\n    })\n    // 401 Unauthorized Error\n    .catch((err) => {\n      Sentry.captureException(err);\n      return {\n        jwt: authToken,\n        decoded_jwt: decodedToken,\n        is_verified: false,\n      };\n    });\n  return auth;\n};\n\nexport default verify;\n","import * as jwt from \"jsonwebtoken\";\nimport axios from \"axios\";\nimport * as Sentry from \"@sentry/react\";\nimport { decoded_jwt, auth_status } from \"../../config/interface\";\n\nconst verify_gsuite = async (authToken: string): Promise<auth_status> => {\n  if (authToken === undefined || authToken === \"\") {\n    return {\n      jwt: authToken,\n      is_verified: false,\n    };\n  }\n\n  // await new Promise(resolve => setTimeout(resolve, 5000));\n  const decodedToken: decoded_jwt = (jwt.decode(authToken, {\n    complete: true,\n  }) as any).payload;\n  const user_email = decodedToken[\"email\"];\n  Sentry.setUser({\n    id: decodedToken.sub,\n    email: user_email,\n  });\n\n  const decoded_idp = \"gsuite\";\n\n  const config = {\n    headers: {\n      Authorization: `Bearer ${authToken}`,\n    },\n  };\n  const auth: auth_status = await axios\n    .get(\n      (process.env.REACT_APP_CLOUD_FUNCTION_URL as string) +\n        \"/\" +\n        decoded_idp +\n        \"/verify-jwt\",\n      config\n    )\n    .then((res) => {\n      return {\n        jwt: authToken,\n        decoded_jwt: decodedToken,\n        is_verified: true,\n      };\n    })\n    // 401 Unauthorized Error\n    .catch((err) => {\n      Sentry.captureException(err);\n      return {\n        jwt: authToken,\n        decoded_jwt: decodedToken,\n        is_verified: false,\n      };\n    });\n  return auth;\n};\n\nexport default verify_gsuite;\n","import axios from \"axios\";\nimport * as Sentry from \"@sentry/react\";\nimport { profile } from \"../../config/interface\";\n\nconst get_profile = async (authToken: string): Promise<profile> => {\n  if (authToken === undefined || authToken === \"\") {\n    return {\n      exists: false,\n      isLoading: true,\n    };\n  }\n\n  const config = {\n    headers: {\n      Authorization: `Bearer ${authToken}`,\n    },\n  };\n  const result: profile = await axios\n    .get(\n      (process.env.REACT_APP_CLOUD_FUNCTION_URL as string) + \"/auth0/profile\",\n      config\n    )\n    .then((res) => {\n      return {\n        exists: res.data.exists,\n        isLoading: false,\n        profile: res.data,\n      };\n    })\n    // 401 Unauthorized Error\n    .catch((err) => {\n      Sentry.captureException(err);\n      return {\n        exists: false,\n        isLoading: false,\n      };\n    });\n  return result;\n};\n\nexport default get_profile;\n","import axios from \"axios\";\nimport * as Sentry from \"@sentry/react\";\nimport { application_set } from \"../../config/interface\";\n\nconst get_applications = async (authToken: string): Promise<application_set> => {\n  if (authToken === undefined || authToken === \"\") {\n    return {\n      isLoading: true,\n    };\n  }\n\n  const config = {\n    headers: {\n      Authorization: `Bearer ${authToken}`,\n    },\n  };\n  const result: application_set = await axios\n    .get(\n      (process.env.REACT_APP_CLOUD_FUNCTION_URL as string) + \"/auth0/applications\",\n      config\n    )\n    .then((res) => {\n      return {\n        ...res.data,\n        isLoading: false,\n      };\n    })\n    // 401 Unauthorized Error\n    .catch((err) => {\n      Sentry.captureException(err);\n      return {\n        isLoading: false,\n      };\n    });\n  return result;\n};\n\nexport default get_applications;\n","import { atom, selector } from \"recoil\";\n// import { getCookie } from \"../acmApi/cookieManager\";\nimport verify from \"./actions/initialize\";\nimport verify_gsuite from \"./actions/initialize_gsuite\";\nimport get_profile from \"./actions/profile\";\nimport get_applications from \"./actions/application\";\n\nexport const jwt = atom({\n  key: \"jwt\",\n  default: {\n    token: \"\",\n    isSet: false,\n  },\n});\n\n// will automatically re-evaluate if the jwt changes\nexport const auth = selector({\n    key: \"auth\",\n    get: async ({get}) => {\n        return await verify(get(jwt).token);\n    },\n});\n\nexport const profile = selector({\n  key: \"profile\",\n  get: async ({get}) => {\n    return await get_profile(get(jwt).token);\n  }\n});\n\nexport const application = selector({\n  key: \"application\",\n  get: async ({get}) => {\n    return await get_applications(get(jwt).token);\n  }\n});\n\nexport const jwt_gsuite = atom({\n  key: \"jwt_gsuite\",\n  default: {\n    token: \"\",\n    isSet: false,\n  },\n});\n\n// will automatically re-evaluate if the jwt_gsuite changes\nexport const auth_gsuite = selector({\n    key: \"auth_gsuite\",\n    get: async ({get}) => {\n        return await verify_gsuite(get(jwt_gsuite).token);\n    },\n});","import React from \"react\";\nimport Message from \"./GenericMessage\";\n\nconst Unauthorized = () => {\n  return (\n    <Message title=\"Unauthorized\" buttonText=\"Return Home\" buttonURL=\"/\" />\n  );\n};\n\nexport default Unauthorized;\n","import React, { useEffect, useState } from \"react\";\nimport Typeform from \"../components/Typeform/typeform\";\nimport Loading from \"./Message/Loading\";\nimport axios from \"axios\";\nimport { profile } from \"../api/state\";\nimport { useRecoilValue } from \"recoil\";\nimport { useHistory } from \"react-router-dom\";\nimport Unauthorized from \"./Message/Unauthorized\";\nimport * as Sentry from \"@sentry/react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\ninterface typeform_info {\n  typeform_id: string;\n  endpoint: string;\n}\n\nconst Form = ({ typeform_id, endpoint }: typeform_info) => {\n  const [loading, setLoading] = useState(false);\n  const [isAuth, setIsAuth] = useState(false);\n  const [signInAttempt, setSignInAttempt] = useState(false);\n  const [url, setUrl] = useState(\"\");\n  const { getAccessTokenSilently, isAuthenticated, isLoading } = useAuth0();\n  const user_profile = useRecoilValue(profile);\n  const history = useHistory();\n\n  useEffect(() => {\n    const load_data = async (): Promise<void> => {\n      if (loading || signInAttempt) {\n        return;\n      }\n      setLoading(true);\n      setSignInAttempt(true);\n\n      const authToken = await getAccessTokenSilently();\n\n      if (authToken === undefined) {\n        setLoading(false);\n        return;\n      }\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n        },\n      };\n      axios\n        .get(\n          (process.env.REACT_APP_CLOUD_FUNCTION_URL as string) + endpoint,\n          config\n        )\n        .then((res) => {\n          setIsAuth(true);\n\n          setUrl(\n            \"https://acmutd.typeform.com/to/\" +\n              typeform_id +\n              \"#\" +\n              new URLSearchParams(res.data).toString()\n          );\n          setLoading(false);\n        })\n        .catch((err) => {\n          Sentry.captureException(err);\n          setIsAuth(false);\n          setLoading(false);\n        });\n    };\n    load_data();\n  }, [endpoint, getAccessTokenSilently, loading, signInAttempt, typeform_id]);\n\n  useEffect(() => {\n    if (isLoading || user_profile.exists || user_profile.isLoading) {\n      return;\n    }\n    if (isAuthenticated) {\n      history.push(\"/newprofile\");\n    }\n  }, [isLoading, isAuthenticated, user_profile, history]);\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  if (!isAuth) {\n    return <Unauthorized />;\n  }\n\n  return <Typeform tfLink={url} style={{ height: \"100vh\" }} />;\n};\n\nexport default Form;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Layout, Menu } from \"antd\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport ACMLogo from \"../../assets/images/acm-light.png\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./DarkNavbar.css\";\nconst { Header } = Layout;\n\ninterface NavbarProps {\n  selectedPage: string;\n}\n\nconst DarkNavbar = ({ selectedPage }: NavbarProps) => {\n  const history = useHistory();\n  const { logout } = useAuth0();\n\n  const navigate = (MenuParams: any) => {\n    if (MenuParams.key === \"logout\") {\n      logout();\n    } else history.push(`/${MenuParams.key}`);\n  };\n\n  return (\n    <Header>\n      <LogoComponent>\n        <img\n          alt=\"ACMLogo\"\n          src={ACMLogo}\n          onClick={() => (window.location.href = \"https://www.acmutd.co/\")}\n        />\n      </LogoComponent>\n      <Menu\n        theme=\"dark\"\n        mode=\"horizontal\"\n        defaultSelectedKeys={[selectedPage]}\n        onSelect={navigate}\n      >\n        <Menu.Item key=\"profile\">Profile</Menu.Item>\n        <Menu.Item key=\"calendar\">Calendar</Menu.Item>\n        <Menu.Item key=\"applications\">Open Applications</Menu.Item>\n        <Menu.Item style={{ float: \"right\" }} key=\"logout\">\n          Logout\n        </Menu.Item>\n      </Menu>\n    </Header>\n  );\n};\n\nconst LogoComponent = styled.div`\n  img {\n    height: 64px;\n    float: left;\n    padding: 10px;\n  }\n`;\n\nexport default DarkNavbar;\n","import React, { useEffect } from \"react\";\nimport { Layout } from \"antd\";\nimport { Card, CardHeader, Grid, CircularProgress, CardContent, CardActions } from '@material-ui/core';\nimport Navbar from \"../../components/Navbar/DarkNavbar\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./Applications.css\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useRecoilValue } from \"recoil\";\nimport { profile, application } from \"../../api/state\";\nimport Button from \"../../components/OrangeButton/OrangeButton\";\nconst { Content } = Layout;\n\nconst Applications = () => {\n  const { isLoading, isAuthenticated } = useAuth0();\n  const user_profile = useRecoilValue(profile);\n  const open_applications = useRecoilValue(application);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (isLoading || user_profile.exists || user_profile.isLoading) {\n      return;\n    }\n    if (isAuthenticated) {\n      history.push(\"/newprofile\");\n    }\n  }, [isLoading, isAuthenticated, user_profile, history]);\n\n  const linkRedirect = (link: string) => {\n    if (link.includes(\"http\")) {\n      window.location.href = link;\n    } else history.push(link);\n  };\n\n  const cardApps = () => {\n    return <Grid container alignItems=\"stretch\" spacing={4}>\n      {open_applications.applications?.map((app) => {\n      if(app.active) {\n        return <Grid item xs={6} md={6} lg={4}>\n          <Card>\n            <CardHeader title={app.typeform_name}/>\n              <CardContent>{app.description}\n              </CardContent>\n              <CardActions style={{justifyContent: \"center\", paddingBottom: \"20px\"}}>\n                <Button text=\"Apply here!\" onClick={() => linkRedirect(`${app.path_name}`)} />\n                {app.external_link && (\n                  <Button text=\"Learn more\" onClick={() => linkRedirect(app.external_link)} />\n                )}\n              </CardActions>\n          </Card>\n        </Grid>\n      }\n      })}\n    </Grid>\n  }\n\n  return (\n    <Layout>\n      <Navbar selectedPage=\"applications\" />\n      <Content>\n          {open_applications.isLoading ? <CircularProgress/> : cardApps()}\n      </Content>\n    </Layout>\n  );\n};\n\nexport default Applications;\n","import { Steps, Button, message, Alert } from \"antd\";\nimport React, { Fragment, useState } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Button2 from \"../../components/OrangeButton/OrangeButton\";\nimport axios from \"axios\";\nimport \"./Discord.css\";\n\nconst { Step } = Steps;\ninterface discord_profile {\n  snowflake: string;\n  username: string;\n  discriminator: string;\n}\n\nconst DiscordPane = () => {\n  const [current, setCurrent] = useState(0);\n  const [stepComplete, setStepComplete] = useState(false);\n  const [step2Complete, setStep2Complete] = useState(false);\n  const [access_token, setAccessToken] = useState(\"\");\n  const [successVerification, setSuccessVerification] = useState(false);\n  const [discordProfile, setDiscordProfile] = useState<\n    discord_profile | undefined\n  >(undefined);\n  const { getAccessTokenSilently, loginWithRedirect } = useAuth0();\n\n  const next = () => {\n    setStepComplete(false);\n    setCurrent(current + 1);\n  };\n\n  const signin = async () => {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${await getAccessTokenSilently()}`,\n      },\n    };\n    const result = await axios.get(\n      (process.env.REACT_APP_CLOUD_FUNCTION_URL as string) + \"/auth0/discord\",\n      config\n    );\n    console.log(result);\n    if (result.data.discord_authentication) {\n      setStepComplete(true);\n      setAccessToken(result.data.access_token);\n      setDiscordProfile({\n        snowflake: result.data.snowflake,\n        username: result.data.username,\n        discriminator: result.data.discriminator,\n      });\n    } else {\n      await loginWithRedirect({\n        appState: { targetUrl: \"/profile\" },\n        connection: \"Discord\",\n      });\n    }\n  };\n\n  const verify = async () => {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${await getAccessTokenSilently()}`,\n      },\n    };\n    const data = {\n      access_token: access_token,\n      snowflake: discordProfile?.snowflake,\n    };\n    const result = await axios.post(\n      (process.env.REACT_APP_CLOUD_FUNCTION_URL as string) +\n        \"/auth0/verify-discord\",\n      data,\n      config\n    );\n\n    if (result.data.is_present && result.data.is_verified) {\n      setSuccessVerification(true);\n      setStepComplete(true);\n    }\n    console.log(result);\n    setStep2Complete(true);\n  };\n\n  const steps = [\n    {\n      title: \"Authentication\",\n      content: (\n        <Fragment>\n          <h3>Welcome to the discord integration utility.</h3>\n          <p>\n            Complete the following steps to link your ACM account to discord.\n          </p>\n          <p>\n            This will help you sync your event attendence and activity from\n            discord over to the portal.\n          </p>\n          {!stepComplete ? (\n            <Fragment>\n              {\" \"}\n              <p>Step 1: Sign in with discord</p>{\" \"}\n              <Button2 text=\"Sign in\" onClick={signin} />{\" \"}\n            </Fragment>\n          ) : (\n            <Fragment>\n              <p>\n                Discord Username:{\" \"}\n                {discordProfile?.username + \"#\" + discordProfile?.discriminator}\n              </p>\n              <p>Thank you, please click next.</p>\n            </Fragment>\n          )}\n        </Fragment>\n      ),\n    },\n    {\n      title: \"Verification\",\n      content: (\n        <Fragment>\n          <h3>Joining the ACM Discord Server</h3>\n          <p>\n            All our events take place on the ACM Discord Server. Clicking verify\n            will check whether you have joined the ACM Discord Server. You can\n            join the{\" \"}\n            <a href=\"https://acmutd.co/discord\">\n              ACM Discord Server by clicking here.\n            </a>\n          </p>\n          <p>\n            Once you join the ACM Discord Server please complete verifying\n            yourself in the #verify-here channel before returning here.\n          </p>\n\n          {!step2Complete ? (\n            <Fragment>\n              {\" \"}\n              <p>Step 2: Verify</p> <Button2 text=\"Verify\" onClick={verify} />{\" \"}\n            </Fragment>\n          ) : successVerification ? (\n            <p>Thank you, please click next.</p>\n          ) : (\n            <Fragment>\n              {\" \"}\n              <p>\n                Verification Failed. Please review steps and try again.\n              </p>{\" \"}\n              <Button2 text=\"Verify\" onClick={verify} />{\" \"}\n            </Fragment>\n          )}\n        </Fragment>\n      ),\n    },\n    {\n      title: \"Confirmation\",\n      content: (\n        <Fragment>\n          <p>\n            Thank you for linking your discord account with the ACM Portal.\n            You'll now be eligible to receive additional benefits.\n          </p>\n          <p>\n            You'll also find that you now that have a verified role on discord\n            to confirm that the linking was successful.\n          </p>\n          <p>\n            You can refresh this page to review your linked discord profile\n            information\n          </p>\n        </Fragment>\n      ),\n    },\n  ];\n\n  return (\n    <Fragment>\n      <Alert\n        message=\"Warning\"\n        description=\"Hello, this feature is still in development, you're welcome to try it out but be warned that it may switch you out of your current account depending on your email.\"\n        type=\"warning\"\n        showIcon\n        closable\n      />\n      <br></br>\n      <Steps current={current}>\n        {steps.map((item) => (\n          <Step key={item.title} title={item.title} />\n        ))}\n      </Steps>\n      <div className=\"steps-content\">{steps[current].content}</div>\n      <div className=\"steps-action\">\n        {current < steps.length - 1 && (\n          <Button\n            type=\"primary\"\n            onClick={() => next()}\n            disabled={!stepComplete}\n          >\n            Next\n          </Button>\n        )}\n        {current === steps.length - 1 && (\n          <Button\n            type=\"primary\"\n            onClick={() => message.success(\"Verification Complete\")}\n          >\n            Done\n          </Button>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default DiscordPane;\n","import React, { useEffect, Fragment } from \"react\";\nimport { Tabs, Layout } from \"antd\";\nimport Navbar from \"../../components/Navbar/DarkNavbar\";\nimport \"./Profile.css\";\nimport Button from \"../../components/OrangeButton/OrangeButton\";\nimport { profile } from \"../../api/state\";\nimport { useRecoilValue } from \"recoil\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport DiscordPane from \"./Discord\";\nconst { Content } = Layout;\nconst { TabPane } = Tabs;\n\nconst Profile = () => {\n  const history = useHistory();\n  const user_profile = useRecoilValue(profile);\n  const { isLoading, isAuthenticated } = useAuth0();\n\n  useEffect(() => {\n    if (isLoading || user_profile.exists || user_profile.isLoading) {\n      return;\n    }\n    if (isAuthenticated) {\n      history.push(\"/newprofile\");\n    }\n  }, [isLoading, isAuthenticated, user_profile, history]);\n\n  const discPane =\n    user_profile.profile?.discord_verified || false ? (\n      <Fragment>\n        <h1 style={{ color: \"white\", marginBottom: 20 }}>\n          Your Discord Profile:\n        </h1>\n        <p>\n          <strong>Discord ID:</strong> {user_profile.profile?.snowflake}\n        </p>\n        <p>\n          <strong>Username:</strong>{\" \"}\n          {user_profile.profile?.username +\n            \"#\" +\n            user_profile.profile?.discriminator}\n        </p>\n      </Fragment>\n    ) : (\n      <DiscordPane />\n    );\n\n  return (\n    <Layout>\n      <Navbar selectedPage=\"profile\" />\n      <Content>\n        <Tabs defaultActiveKey=\"1\" tabPosition=\"left\">\n          <TabPane tab=\"Event Participation\" key={1}>\n            <h1 style={{ color: \"white\", marginBottom: 20 }}>Event History:</h1>\n            {user_profile.profile?.past_events ? (\n              user_profile.profile.past_events\n                .map((event, index) => (\n                  <div className=\"border sepFlexBox\" key={index}>\n                    <h2 style={{ color: \"white\" }}>{event.name}</h2>\n                    <h2 style={{ color: \"white\" }}>\n                      |&nbsp;&nbsp;&nbsp;\n                      {new Date(event.submitted_at).toDateString()}\n                    </h2>\n                  </div>\n                ))\n                .reverse()\n            ) : (\n              <p>No events attended yet.</p>\n            )}\n          </TabPane>\n          <TabPane tab=\"Past Applications\" key={2}>\n            <h1 style={{ color: \"white\" }}>Submitted Applications:</h1>\n            <p>\n              Note: If you recently submitted an application, it may take a\n              short period of time before appearing\n            </p>\n            {user_profile.profile?.past_applications ? (\n              user_profile.profile.past_applications\n                .map((app, index) => (\n                  <div className=\"border sepFlexBox\" key={index}>\n                    <h2 style={{ color: \"white\" }}>{app.name}</h2>\n                    <h2 style={{ color: \"white\" }}>\n                      |&nbsp;&nbsp;&nbsp;\n                      {new Date(app.submitted_at).toDateString()}\n                    </h2>\n                  </div>\n                ))\n                .reverse()\n            ) : (\n              <p>No applications submitted yet.</p>\n            )}\n          </TabPane>\n          <TabPane tab=\"Shortcuts\" key={3}>\n            <h1 style={{ color: \"white\", marginBottom: 20 }}>Quick Links:</h1>\n            <ul className=\"linkList\" style={{ fontSize: 20 }}>\n              <li>\n                <a\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                  href=\"https://acmutd.co/discord\"\n                >\n                  ACM Discord\n                </a>\n              </li>\n              <li>\n                <a\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                  href=\"https://www.facebook.com/acmatutd/\"\n                >\n                  ACM Facebook\n                </a>\n              </li>\n              <li>\n                <a\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                  href=\"https://www.instagram.com/acmutd/\"\n                >\n                  ACM Instagram\n                </a>\n              </li>\n              <li>\n                <a\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                  href=\"https://www.linkedin.com/company/acmutd/\"\n                >\n                  ACM LinkedIn\n                </a>\n              </li>\n              <li>\n                <a\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                  href=\"https://www.acmutd.co/\"\n                >\n                  ACM Website\n                </a>\n              </li>\n            </ul>\n          </TabPane>\n          {/*<TabPane tab=\"Badges\" key={3}>\n            Content 3\n                </TabPane>*/}\n          <TabPane tab=\"Settings\" key={4}>\n            <h1 style={{ color: \"white\", marginBottom: 20 }}>\n              Your Profile Data:{\" \"}\n            </h1>\n            <p>\n              <strong>Email:</strong> {user_profile.profile?.email}\n            </p>\n            <p>\n              <strong>Name:</strong> {user_profile.profile?.first_name}{\" \"}\n              {user_profile.profile?.last_name}\n            </p>\n            <p>\n              <strong>NetID:</strong> {user_profile.profile?.net_id}\n            </p>\n            <p>\n              <strong>Major:</strong> {user_profile.profile?.major}\n            </p>\n            <p>\n              <strong>University:</strong> {user_profile.profile?.university}\n            </p>\n            <p>\n              <strong>Classification:</strong>{\" \"}\n              {user_profile.profile?.classification}\n            </p>\n            <Button\n              text=\"Update Profile Information\"\n              redirectURL=\"/newprofile\"\n            />\n          </TabPane>\n          <TabPane tab=\"Discord\" key={5}>\n            {discPane}\n          </TabPane>\n        </Tabs>\n      </Content>\n    </Layout>\n  );\n};\n\nexport default Profile;\n\n/* const data = [\n  {\n    title: \"Ant Design Title 1\",\n  },\n  {\n    title: \"Ant Design Title 2\",\n  },\n  {\n    title: \"Ant Design Title 3\",\n  },\n  {\n    title: \"Ant Design Title 4\",\n  },\n]; */\n","import React, { useEffect } from \"react\";\nimport Message from \"./GenericMessage\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { jwt } from \"../../api/state\";\nimport { useRecoilState } from \"recoil\";\nimport * as Sentry from \"@sentry/react\";\n\nconst Welcome = () => {\n  const { isLoading, isAuthenticated, getAccessTokenSilently, user } = useAuth0();\n  const [token, setToken] = useRecoilState(jwt);\n\n  useEffect(() => {\n    const fn = async () => {\n      if (isAuthenticated && !token.isSet) {\n        setToken({ token: await getAccessTokenSilently(), isSet: true });\n        Sentry.setUser({\n          email: user.email,\n          id: user.sub,\n        });\n      }\n    };\n    fn();\n  }, [isLoading, isAuthenticated, token, getAccessTokenSilently, setToken, user]);\n\n  return (\n    <Message title=\"Welcome to ACM!\" buttonText=\"Get Started!\" buttonURL=\"/profile\" />\n  );\n};\n\nexport default Welcome;\n","import React from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { auth_gsuite } from \"../../api/state\";\nimport GenericMessage from \"./GenericMessage\";\n\n// Sticks the signed in user's email into description of GenericMessage\n\ninterface message {\n  title: string;\n  buttonText?: string; // if not defined, don't show button\n  buttonAction?: () => void;\n  buttonURL?: string;\n  loading?: boolean;\n}\nconst GsuiteLanding = (props: message) => {\n  const auth_status = useRecoilValue(auth_gsuite);\n  const email =\n    auth_status.decoded_jwt === undefined\n      ? undefined\n      : auth_status.decoded_jwt[\"email\"];\n\n  return (\n    <GenericMessage\n      title={props.title}\n      desc={email}\n      buttonText={props.buttonText}\n      buttonAction={props.buttonAction}\n      buttonURL={props.buttonURL}\n      loading={props.loading}\n    />\n  );\n};\n\nexport default GsuiteLanding;\n","export const vanity = process.env.REACT_APP_VANITY_TYPEFORM as string;\nexport const pro = process.env.REACT_APP_PROFILE_TYPEFORM as string;\nexport const survey = process.env.REACT_APP_PARTICIPATION_TYPEFORM as string;\nexport const event = process.env.REACT_APP_EVENT_TYPEFORM as string;\nexport const email = process.env.REACT_APP_SENDGRID_TYPEFORM as string;\nexport const form = process.env.REACT_APP_FORM_ADDER_TYPEFORM as string\nexport const unauthorized_form = process.env.REACT_APP_UNAUTHORIZED_TYPEFORM as string;\nexport const mentor = process.env.REACT_APP_MENTOR_TYPEFORM as string\nexport const mentee = process.env.REACT_APP_MENTEE_TYPEFORM as string\n","import React from \"react\";\nimport { Layout, Calendar, Badge } from \"antd\";\nimport Navbar from \"../../components/Navbar/DarkNavbar\";\nimport \"./Calendar.css\";\n\ninterface calendarEvent {\n  color: string;\n  content: string;\n  link?: string;\n}\n\nconst CalendarPage = () => {\n  const getListData = (value: any) => {\n    let listData: calendarEvent[] = [];\n    switch (value.year()) {\n      case 2021:\n        switch (value.month()) {\n          case 0:\n            switch (value.date()) {\n              case 29:\n                listData = [\n                  {\n                    color: \"orange\",\n                    content: \"ACM Spring Kickoff\",\n                    link: \"https://acmutd.co\",\n                  },\n                ];\n                break;\n              default:\n            }\n            break;\n          case 1:\n            switch (value.date()) {\n              case 11:\n                listData = [\n                  {\n                    color: \"green\",\n                    content: \"Intern Fair Prep\",\n                    link: \"https://acmutd.co\",\n                  },\n                ];\n                break;\n              case 12:\n                listData = [\n                  {\n                    color: \"purple\",\n                    content: \"Fireside Talks with ACM Development\",\n                    link: \"https://github.com/acmutd\",\n                  },\n                ];\n                break;\n              case 24:\n                listData = [\n                  {\n                    color: \"green\",\n                    content: \"Hacking the Hackathon\",\n                    link: \"https://acmutd.co\",\n                  },\n                ];\n                break;\n              default:\n            }\n            break;\n          case 2:\n            switch (value.date()) {\n              case 5:\n                listData = [\n                  {\n                    color: \"purple\",\n                    content: \"Fireside Talks with ACM Development\",\n                    link: \"https://github.com/acmutd\",\n                  },\n                ];\n                break;\n              case 26:\n                listData = [\n                  {\n                    color: \"purple\",\n                    content: \"Fireside Talks with ACM Development\",\n                    link: \"https://github.com/acmutd\",\n                  },\n                ];\n                break;\n              default:\n            }\n            break;\n          case 3:\n            switch (value.date()) {\n              case 16:\n                listData = [\n                  {\n                    color: \"purple\",\n                    content: \"Fireside Talks with ACM Development\",\n                    link: \"https://github.com/acmutd\",\n                  },\n                ];\n                break;\n              case 28:\n                listData = [\n                  {\n                    color: \"blue\",\n                    content: \"Projects Presentation Night\",\n                    link: \"https://github.com/acmutd\",\n                  },\n                ];\n                break;\n              default:\n            }\n            break;\n          default:\n        }\n        break;\n      default:\n    }\n    return listData || [];\n  };\n\n  const dateCellRender = (value: any) => {\n    const listData = getListData(value) as calendarEvent[];\n    return (\n      <div className=\"events\">\n        {listData.map((item: any) => (\n          <React.Fragment key={item.content}>\n            <a href={item.link} rel=\"noopener noreferrer\" target=\"_blank\">\n              <Badge color={item.color} text={item.content} />\n            </a>\n          </React.Fragment>\n        ))}\n      </div>\n    );\n  };\n\n  const getMonthData = (value: any) => {\n    if (value.month() === 8) {\n      return 1394;\n    }\n  };\n\n  const monthCellRender = (value: any) => {\n    const num = getMonthData(value);\n    return num ? (\n      <div className=\"notes-month\">\n        <section>{num}</section>\n        <span>ACM Fall Kickoff</span>\n      </div>\n    ) : null;\n  };\n\n  return (\n    <Layout>\n      <Navbar selectedPage=\"calendar\" />\n\n      <Calendar\n        style={{ paddingLeft: 15, paddingRight: 15, paddingBottom: 15 }}\n        dateCellRender={dateCellRender}\n        monthCellRender={monthCellRender}\n      />\n    </Layout>\n  );\n};\n\nexport default CalendarPage;\n","import React, { useEffect, useState } from \"react\";\nimport Message from \"./GenericMessage\";\nimport { jwt } from \"../../api/state\";\nimport { useRecoilValue } from \"recoil\";\nimport axios from \"axios\";\n\nconst EventPage = () => {\n  const token = useRecoilValue(jwt);\n  const [apiComplete, setApiComplete] = useState(false);\n  const [event, setEvent] = useState(\"\");\n\n  useEffect(() => {\n    const fn = async () => {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      };\n      const result = await axios.get(\n        (process.env.REACT_APP_CLOUD_FUNCTION_URL as string) +\n          \"/auth0/checkin\" +\n          \"?checkpath=\" +\n          window.location.pathname,\n        config\n      );\n      setApiComplete(true);\n      setEvent(result.data.event_name);\n    };\n    fn();\n  }, [token]);\n\n  return (\n    <Message\n      title=\"Thanks for attending!\"\n      loading={!apiComplete}\n      desc={`Your participation at ${event} has been recorded`}\n      buttonText=\"Open Profile\"\n      buttonURL=\"/profile\"\n    />\n  );\n};\n\nexport default EventPage;\n","import React from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { auth_gsuite } from \"../../api/state\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst GsuiteProtectedRoute = ({ Component, path, ...rest }: any) => {\n  const auth_status = useRecoilValue(auth_gsuite);\n  //Save user location for redirect in Authorize\n  sessionStorage.setItem(\"og-path\", window.location.pathname);\n\n  const render = () => {\n    return auth_status.is_verified === true ? (\n      Component\n    ) : (\n      <Redirect exact to=\"/gsuite\" />\n    );\n  };\n\n  return <Route path={path} render={render} {...rest} />;\n};\nexport default GsuiteProtectedRoute;\n","import React, { useEffect, useState } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { jwt } from \"../../api/state\";\nimport { profile, application } from \"../../api/state\";\nimport { useRecoilValue } from \"recoil\";\nimport { useHistory } from \"react-router-dom\";\nimport Loading from \"../Message/Loading\";\nimport Form from \"../../views/Form\";\nimport { application as application_interface } from \"../../config/interface\";\n\nconst CustomForm = () => {\n  const [typeformID, setTypeformID] = useState(\"NxomQTLD\");\n  const { isLoading, isAuthenticated } = useAuth0();\n  const token = useRecoilValue(jwt);\n  const history = useHistory();\n  const user_profile = useRecoilValue(profile);\n  const apps = useRecoilValue(application);\n\n  useEffect(() => {\n    if (isLoading || user_profile.exists || user_profile.isLoading) {\n      return;\n    }\n    if (isAuthenticated) {\n      history.push(\"/newprofile\");\n    }\n  }, [isLoading, isAuthenticated, user_profile, history]);\n\n  useEffect(() => {\n    console.log(apps);\n    if ((apps.total as number) > 0) {\n      apps.applications\n        ?.filter((app: application_interface) => {\n          return app.path_name === window.location.pathname;\n        })\n        .forEach((app: application_interface) => {\n          setTypeformID(app.typeform_id);\n        });\n    }\n  }, [apps, isAuthenticated, token.isSet]);\n\n  return typeformID === \"NxomQTLD\" ? (\n    <Loading />\n  ) : (\n    <Form typeform_id={typeformID} endpoint=\"/auth0/developer\" />\n  );\n};\n\nexport default CustomForm;\n","/*\n * General utils for managing cookies in Typescript.\n * Copied off of a gist attached to stack overflow & it works pretty well\n */\nexport function setCookie(name: string, val: string) {\n    const date = new Date();\n    const value = val;\n\n    // Set it expire in 7 days\n    date.setTime(date.getTime() + (7 * 24 * 60 * 60 * 1000));\n\n    // Set it\n    document.cookie = name+\"=\"+value+\"; expires=\"+date.toUTCString()+\"; path=/\";\n}\n\nexport function getCookie(name: string) {\n    const value = \"; \" + document.cookie;\n    const parts = value.split(\"; \" + name + \"=\");\n    \n    if (parts.length === 2) {\n        //@ts-ignore\n        return parts.pop().split(\";\").shift();\n    }\n}\n\nexport function deleteCookie(name: string) {\n    const date = new Date();\n\n    // Set it expire in -1 days\n    date.setTime(date.getTime() + (-1 * 24 * 60 * 60 * 1000));\n\n    // Set it\n    document.cookie = name+\"=; expires=\"+date.toUTCString()+\"; path=/\";\n}","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useRecoilValue, useRecoilState } from \"recoil\";\nimport { jwt_gsuite, auth_gsuite } from \"../../api/state\";\nimport { getCookie } from \"../../acmApi/cookieManager\";\nimport { useHistory, Redirect } from \"react-router-dom\";\n\nconst GsuiteAuthorize = () => {\n  const [Jwt, setJwt] = useRecoilState(jwt_gsuite);\n  const auth_status = useRecoilValue(auth_gsuite);\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    // Case 1: user has no cf cookie and is not verified\n    //            trigger cf to get cookie, go to case 2\n    // Case 2: user has cf cookie and is not verified\n    //            copy cookie to jwt_gsuite, verify, go to case 3\n    // Case 3: user has cf cookie and is verified\n    //            take user back to where they were going.\n    // Case 4: user has no cf cookie and is verified\n    //            copy case 1\n    // Jwt.token === \"\" when initialized, Jwt.token === undefined when not initialized\n\n    if (auth_status.is_verified || loading) {\n      // Case 3\n      return;\n    } else {\n      // If auth_status is not verified\n      if (getCookie(\"CF_Authorization\") === undefined) {\n        // Case 1 & 4, CF cookie is missing\n        // Refresh screen to trigger CF Access to get cookie\n        setLoading(true);\n        window.location.reload();\n        // Go to case 2\n      } else if (getCookie(\"CF_Authorization\") !== undefined) {\n        // Case 2, cookie present\n        setLoading(true);\n        setJwt({ token: getCookie(\"CF_Authorization\") as string, isSet: true });\n      } else {\n        return;\n      }\n    }\n  }, [auth_status, history, Jwt.token, setJwt, loading]);\n\n  if (auth_status.is_verified) {\n    // If user is verified, take user back to where they were going\n    let userPath = sessionStorage.getItem(\"og-path\");\n    userPath = userPath === null ? \"/\" : userPath;\n    return <Redirect to={userPath} />; // use Redirect in place of history.push() to keep from updating during existing state transition\n  }\n\n  return (\n    <AuthorizeComponent>\n      <div className=\"container\">\n        <img\n          className=\"acm-logo\"\n          src=\"https://www.acmutd.co/brand/General/Assets/Logos/favicon.png\"\n          alt=\"ACM Logo\"\n        />\n        <h1 className=\"text\">Authorization in Progress... </h1>\n      </div>\n    </AuthorizeComponent>\n  );\n};\n\nconst AuthorizeComponent = styled.div`\n  .container {\n    display: flex;\n    background-color: black;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    height: 100vh;\n  }\n  .acm-logo {\n    width: 20%;\n  }\n  .text {\n    color: white;\n    margin: 30px;\n    font-family: ;\n  }\n  .retry-button {\n    outline: none;\n    border: 1px solid transparent;\n    margin: 0px;\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 3px 12px 0px;\n    padding: 8px 18px;\n    min-height: 48px;\n    background-color: rgb(243, 126, 3);\n    color: rgb(255, 255, 255);\n    border-radius: 4px;\n    font-size: 20px;\n  }\n  .retry-button:hover {\n    background-color: rgb(247, 152, 52);\n  }\n`;\n\nexport default GsuiteAuthorize;\n","import React from \"react\";\nimport Typeform from \"../components/Typeform/typeform\";\nimport { useRecoilValue } from \"recoil\";\nimport { auth_gsuite } from \"../api/state\";\nimport { unauthorized_form } from \"../config/typeform_config\";\n\ninterface message {\n  typeform_id: string;\n}\n\nconst CapitalizeWord = (word: string) => {\n  return word.charAt(0).toUpperCase() + word.slice(1);\n};\n\nconst ProfileInjectedTypeform = ({ typeform_id }: message) => {\n  const auth_status = useRecoilValue(auth_gsuite);\n\n  if (auth_status.is_verified) {\n    const email = auth_status.decoded_jwt![\"email\"];\n    const name = email!.split(\"@\")[0];\n    const firstName = CapitalizeWord(name.split(\".\")[0]);\n    const lastName = CapitalizeWord(name.split(\".\")[1]);\n\n    return (\n      <div>\n        <Typeform\n          tfLink={\n            \"https://acmutd.typeform.com/to/\" +\n            typeform_id +\n            \"#email=\" +\n            email +\n            \"&first_name=\" +\n            firstName +\n            \"&last_name=\" +\n            lastName\n          }\n          style={{ height: \"100vh\" }}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <Typeform\n        tfLink={\"https://acmutd.typeform.com/to/\" + unauthorized_form}\n        style={{ height: \"100vh\" }}\n      />\n    </div>\n  );\n};\n\nexport default ProfileInjectedTypeform;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst Auth0ProtectedRoute = ({ Component, path, ...rest }: any) => {\n  const { isAuthenticated } = useAuth0();\n\n  //Save user location for redirect in Authorize\n  sessionStorage.setItem(\"og-path\", window.location.pathname);\n\n  const render = () => {\n    return isAuthenticated === true ? (\n      Component\n    ) : (\n      <Redirect exact to=\"/authorize\" />\n    );\n  };\n\n  return <Route path={path} render={render} {...rest} />;\n};\nexport default Auth0ProtectedRoute;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Redirect } from \"react-router-dom\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { jwt } from \"../../api/state\";\nimport { useRecoilState } from \"recoil\";\n\nconst Auth0Authorize = () => {\n  const [token, setToken] = useRecoilState(jwt);\n  const {\n    isAuthenticated,\n    isLoading,\n    loginWithRedirect,\n    getAccessTokenSilently,\n  } = useAuth0();\n\n  useEffect(() => {\n    const fn = async () => {\n      if (isAuthenticated && !token.isSet) {\n        setToken({ token: await getAccessTokenSilently(), isSet: true });\n      }\n    };\n    fn(); // Need an inner function to use await since useEffect isn't an async function\n  }, [isLoading, isAuthenticated, token, setToken, getAccessTokenSilently]);\n\n  useEffect(() => {\n    if (isLoading || isAuthenticated) {\n      return;\n    }\n\n    const fn = async (): Promise<void> => {\n      await loginWithRedirect({\n        redirectUri: `${window.location.origin}/authorize`,\n      });\n    };\n    fn(); // Need an inner function to use await since useEffect isn't an async function\n  }, [isLoading, isAuthenticated, loginWithRedirect]);\n\n  if (isAuthenticated) {\n    let userPath = sessionStorage.getItem(\"og-path\");\n    userPath = userPath === null ? \"/\" : userPath;\n    return <Redirect to={userPath} />; // use Redirect in place of history.push() to keep from updating during existing state transition\n  }\n\n  return (\n    <AuthorizeComponent>\n      <div className=\"container\">\n        <img\n          className=\"acm-logo\"\n          src=\"https://www.acmutd.co/brand/General/Assets/Logos/favicon.png\"\n          alt=\"ACM Logo\"\n        />\n        <h1 className=\"text\">Authorization in Progress... </h1>\n      </div>\n    </AuthorizeComponent>\n  );\n};\n\nconst AuthorizeComponent = styled.div`\n  .container {\n    display: flex;\n    background-color: black;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    height: 100vh;\n  }\n  .acm-logo {\n    width: 20%;\n  }\n  .text {\n    color: white;\n    margin: 30px;\n    font-family: ;\n  }\n  .retry-button {\n    outline: none;\n    border: 1px solid transparent;\n    margin: 0px;\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 3px 12px 0px;\n    padding: 8px 18px;\n    min-height: 48px;\n    background-color: rgb(243, 126, 3);\n    color: rgb(255, 255, 255);\n    border-radius: 4px;\n    font-size: 20px;\n  }\n  .retry-button:hover {\n    background-color: rgb(247, 152, 52);\n  }\n`;\n\nexport default Auth0Authorize;\n","import React, { useEffect } from \"react\";\nimport Message404 from \"./views/Message/Message404\";\nimport Form from \"./views/Form\";\nimport Applications from \"./views/Applications/Applications\";\nimport Profile from \"./views/Profile/Profile\";\nimport \"./App.css\";\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport Welcome from \"./views/Message/Welcome\";\nimport GsuiteLanding from \"./views/Message/GsuiteLanding\";\nimport GenericMessage from \"./views/Message/GenericMessage\";\nimport {\n  pro,\n  vanity,\n  email,\n  event,\n  form,\n  mentor,\n  mentee,\n} from \"./config/typeform_config\";\nimport CalendarPage from \"./views/Calendar/Calendar\";\nimport EventPage from \"./views/Message/Event\";\nimport * as Sentry from \"@sentry/react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport GsuiteProtectedRoute from \"./components/Actions/GsuiteRoute\";\nimport { jwt } from \"./api/state\";\nimport { useRecoilState } from \"recoil\";\nimport CustomForm from \"./views/Message/CustomForm\";\nimport GsuiteAuthorize from \"./components/Actions/GsuiteAuthorize\";\nimport ProfileInjectedTypeform from \"./views/ProfileInjectedTypeform\";\nimport Typeform from \"./components/Typeform/typeform\";\nimport Auth0ProtectedRoute from \"./components/Actions/Auth0Route\";\nimport Auth0Authorize from \"./components/Actions/Auth0Authorize\";\n/**\n * Note: Use Component with Capital C when using a protected route\n * AuthRoute = protected by Auth0\n * GsuiteProtectedRoute = protected by GSuite\n * <Form /> has built in authentication verification, results in 2 api calls to the same endpoint\n */\nfunction App() {\n  const { isLoading, isAuthenticated, getAccessTokenSilently, user } =\n    useAuth0();\n  const [token, setToken] = useRecoilState(jwt);\n\n  useEffect(() => {\n    const fn = async () => {\n      if (isAuthenticated && !token.isSet) {\n        setToken({ token: await getAccessTokenSilently(), isSet: true });\n        Sentry.setUser({\n          email: user.email,\n          id: user.sub,\n        });\n      }\n    };\n    fn();\n  }, [\n    isLoading,\n    isAuthenticated,\n    token,\n    setToken,\n    getAccessTokenSilently,\n    user,\n  ]);\n\n  return (\n    <div>\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" component={Welcome} exact />\n          <Route path=\"/authorize\" component={Auth0Authorize} />\n          <Auth0ProtectedRoute\n            path=\"/newprofile\"\n            Component={\n              <Form typeform_id={pro} endpoint=\"/auth0/create-blank-profile\" />\n            }\n            exact\n          />\n          <Auth0ProtectedRoute\n            path=\"/calendar\"\n            Component={<CalendarPage />}\n            exact\n          />\n          <Auth0ProtectedRoute path=\"/profile\" Component={<Profile />} exact />\n          <Auth0ProtectedRoute\n            path=\"/applications\"\n            Component={<Applications />}\n            exact\n          />\n          <Auth0ProtectedRoute path=\"/checkin\" Component={<EventPage />} />\n          <Auth0ProtectedRoute path=\"/forms\" Component={<CustomForm />} />\n          <Auth0ProtectedRoute\n            path=\"/tobor\"\n            Component={<GenericMessage title=\"🤖\" />}\n          />\n          <Route path=\"/gsuite\" component={GsuiteAuthorize} />\n          <GsuiteProtectedRoute\n            path=\"/tothemoon\"\n            Component={<GsuiteLanding title=\"Yay gsuite auth works! 🚀\" />}\n          />\n          <GsuiteProtectedRoute\n            path=\"/vanity\"\n            Component={<ProfileInjectedTypeform typeform_id={vanity} />}\n          />\n          <GsuiteProtectedRoute\n            path=\"/event\"\n            Component={<ProfileInjectedTypeform typeform_id={event} />}\n          />\n          <GsuiteProtectedRoute\n            path=\"/email\"\n            Component={<ProfileInjectedTypeform typeform_id={email} />}\n          />\n          <GsuiteProtectedRoute\n            path=\"/form\"\n            Component={<ProfileInjectedTypeform typeform_id={form} />}\n          />\n          <Auth0ProtectedRoute\n            path=\"/mentor\"\n            Component={\n              <Typeform\n                tfLink={\"https://acmutd.typeform.com/to/\" + mentor}\n                style={{ height: \"100vh\" }}\n              />\n            }\n          />\n          <Auth0ProtectedRoute\n            path=\"/mentee\"\n            Component={\n              <Typeform\n                tfLink={\"https://acmutd.typeform.com/to/\" + mentee}\n                style={{ height: \"100vh\" }}\n              />\n            }\n          />\n          <Route path=\"/*\" component={Message404} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const auth0_config = {\n    domain: process.env.REACT_APP_AUTH0_DOMAIN as string,\n    clientId: process.env.REACT_APP_AUTH0_PORTAL_CLIENTID as string,\n    audience: process.env.REACT_APP_AUTH0_AUDIENCE as string,\n}\n\nexport default auth0_config;","import React from \"react\";\nimport Message from \"./GenericMessage\";\n\nconst Error = () => {\n  return (\n    <Message\n      title=\"Oops. We've run into an error.\"\n      desc=\"We're sorry about the inconvenience that this may have caused you. If this error happens again please report it to ACM Development.\"\n      buttonText=\"Return Home\"\n      buttonURL=\"/\"\n    />\n  );\n};\n\nexport default Error;\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\nimport config from \"./config/auth0_config\";\nimport { Integrations } from \"@sentry/tracing\";\nimport * as Sentry from \"@sentry/react\";\nimport Loading from \"./views/Message/Loading\";\nimport { RecoilRoot as GlobalState } from \"recoil\";\nimport Error from \"./views/Message/Error\";\n\n/*\nSentry Initialization:\n\nSentry acts to organize error reports in an intuitive fashion.\nIt is a catch all that records most issues that take place in\nyour application on the sentry dashboard. The set up for sentry in this application is \nseen below. For more info go to:\n\nACM Sentry how to guide: https://docs.google.com/document/d/1jD4rd2_0TvC2RyjU3XNs1HudUsQBH8kBFLHsKOEvPgc\nSentry docs: https://docs.sentry.io/\n*/\n\nSentry.init({\n  dsn: process.env.REACT_APP_SENTRY_DSN,\n  autoSessionTracking: true,\n  integrations: [new Integrations.BrowserTracing()],\n\n  // We recommend adjusting this value in production, or using tracesSampler\n  // for finer control\n  tracesSampleRate: 1.0,\n  environment: process.env.NODE_ENV,\n  release: process.env.npm_package_version,\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Auth0Provider\n      domain={config.domain}\n      clientId={config.clientId}\n      redirectUri={window.location.origin}\n      audience={config.audience}\n      scope={\"read:current_user update:current_user_metadata\"}\n      useRefreshTokens={true}\n    >\n      <Sentry.ErrorBoundary fallback={<Error />}>\n        <React.Suspense fallback={<Loading />}>\n          <GlobalState>\n            <App />\n          </GlobalState>\n        </React.Suspense>\n      </Sentry.ErrorBoundary>\n    </Auth0Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}